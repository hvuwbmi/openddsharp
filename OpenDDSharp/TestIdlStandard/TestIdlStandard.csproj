<Project>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>7.3</LangVersion>
    <Platforms>AnyCPU;x64;x86</Platforms>
    <!--  VS doesn't call MSBuild to check if projects are up-to-date and it doesn't check the inputs of custom target.
          The following tag disable its custom logic and use MSBuild logic. https://stackoverflow.com/a/13414681/3021815 -->
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
  </PropertyGroup>

  <ItemGroup>
    <IdlFiles Include="IDL\*.idl" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\OpenDDSharp.Standard\OpenDDSharp.Standard.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="TestTypeSupport.cs" />
    <Compile Include="Helpers\MarshalHelper.cs" />
  </ItemGroup>
  
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <!-- Clean up generated code before rebuild -->
  <PropertyGroup>
    <CleanDependsOn>CustomBeforeClean;$(CleanDependsOn);</CleanDependsOn>
  </PropertyGroup>
  <Target Name="CustomBeforeClean" Inputs="@(IdlFiles)" Outputs="AlwaysExecuteDummy">
    <Message Text="Cleaning %(IdlFiles.FileName).idl auto-generated files..." Importance="High" />
    <Delete Files="%(RootDir)%(Directory)..\%(IdlFiles.FileName)TypeSupport.cs;" ContinueOnError="true" />
    <RemoveDir Directories="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)'))NativeProject" />
    <RemoveDir Directories="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)'))WrapperProject" />
  </Target>
  
  <!-- Add VC++ to the PATH -->
  <UsingTask TaskName="OpenDDSharp.BuildTasks.AddPathVC" AssemblyFile="$(MSBuildThisFileDirectory)..\OpenDDSharp.BuildTasks\bin\$(Configuration)\OpenDDSharp.BuildTasks.dll" />
  <Target Name="AddPathVCTarget" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')">
    <Message Text="Add Visual C++ to the PATH..." Importance="High" />
    <AddPathVC Platform="$(Platform)" />
  </Target>
        
  <!-- Set environment variables -->
  <UsingTask TaskName="OpenDDSharp.BuildTasks.SetEnvVar" AssemblyFile="$(MSBuildThisFileDirectory)..\OpenDDSharp.BuildTasks\bin\$(Configuration)\OpenDDSharp.BuildTasks.dll" />
  <Target Name="SetEnvVarTarget" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')">
    <Message Text="Set the environment variables:" Importance="High" />
    <Message Text="DDS_ROOT=$(DDS_ROOT)" Importance="High" />
    <Message Text="ACE_ROOT=$(ACE_ROOT)" Importance="High" />
    <Message Text="TAO_ROOT=$(TAO_ROOT)" Importance="High" />    
    <SetEnvVar Variable="DDS_ROOT" Value="$(DDS_ROOT)" />
    <SetEnvVar Variable="ACE_ROOT" Value="$(ACE_ROOT)" />
    <SetEnvVar Variable="TAO_ROOT" Value="$(TAO_ROOT)" />    
  </Target>
  
  <!-- Generate native OpenDDS project -->
  <UsingTask TaskName="OpenDDSharp.BuildTasks.GenerateNativeProjectTask" AssemblyFile="$(MSBuildThisFileDirectory)..\OpenDDSharp.BuildTasks\bin\$(Configuration)\OpenDDSharp.BuildTasks.dll" />
  <Target Name="GenerateNativeProjectTarget" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')">
    <GenerateNativeProjectTask IntDir="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" OriginalProjectName="$(ProjectName)" IdlFiles="@(IdlFiles)" TemplatePath="$(MSBuildThisFileDirectory)..\OpenDDSharp.IdlGenerator\NativeIdlProjectTemplate.vstemplate" Configuration="$(Configuration)" Platform="$(Platform)" IsStandard="True" />
  </Target>
  
  <!-- Generate wrapper C project -->
  <Target Name="GenerateWrapperProjectTarget" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')">
    <GenerateNativeProjectTask IntDir="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)WrapperProject'))" OriginalProjectName="$(ProjectName)" IdlFiles="@(IdlFiles)" TemplatePath="$(MSBuildThisFileDirectory)..\OpenDDSharp.IdlGenerator\StandardWrapperIdlProject.vstemplate" Configuration="$(Configuration)" Platform="$(Platform)" IsStandard="True" IsWrapper="True" />
  </Target>
  
  <!-- Generate OpenDDSharp IDL files-->
  <Target Name="OpenDDSharpIdlx64" BeforeTargets="PreBuildEvent" Condition="'$(Platform)'=='x64'" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')">
    <Message Text="Generating %(IdlFiles.Identity) code..." Importance="High" />
    <Exec Command="$(MSBuildThisFileDirectory)..\OpenDDSharp.IdlGenerator\bin\x64\$(Configuration)\openddsharp_idl.exe &quot;%(IdlFiles.Identity)&quot; -csharp -P$(ProjectName)" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpIdlx86" BeforeTargets="PreBuildEvent" Condition="'$(Platform)'=='x86'" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')">
    <Message Text="Generating %(IdlFiles.Identity) code..." Importance="High" />
    <Exec Command="$(MSBuildThisFileDirectory)..\OpenDDSharp.IdlGenerator\bin\Win32\$(Configuration)\openddsharp_idl.exe &quot;%(IdlFiles.Identity)&quot; -csharp -P$(ProjectName)" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>

  <!-- Copy DLLs after build-->
  <Target Name="CopyNative" AfterTargets="AfterBuild">    
    <ItemGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
      <Dlls Include="$(IntermediateOutputPath)WrapperProject\bin\Win32\Debug\$(ProjectName)WrapperWin32d.dll" />
    </ItemGroup>
    <ItemGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
      <Dlls Include="$(IntermediateOutputPath)WrapperProject\bin\Win32\Release\$(ProjectName)WrapperWin32.dll" />
    </ItemGroup>
    <ItemGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      <Dlls Include="$(IntermediateOutputPath)WrapperProject\bin\x64\Debug\$(ProjectName)Wrapperx64d.dll" />
    </ItemGroup>
    <ItemGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
      <Dlls Include="$(IntermediateOutputPath)WrapperProject\bin\x64\Release\$(ProjectName)Wrapperx64.dll" />
    </ItemGroup>
    <ItemGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCpu'">
      <Dlls Include="$(IntermediateOutputPath)WrapperProject\bin\Win32\Debug\$(ProjectName)WrapperWin32d.dll;$(IntermediateOutputPath)WrapperProject\bin\x64\Debug\$(ProjectName)Wrapperx64d.dll" />      
    </ItemGroup>    
    <ItemGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCpu'">
      <Dlls Include="$(IntermediateOutputPath)WrapperProject\bin\Win32\Release\$(ProjectName)WrapperWin32.dll;$(IntermediateOutputPath)WrapperProject\bin\x64\Release\$(ProjectName)Wrapperx64.dll" />
    </ItemGroup>    
    <Copy SourceFiles="@(Dlls)" DestinationFolder="$(TargetDir)" SkipUnchangedFiles="true" />
  </Target>
  
</Project>
