// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p15
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// e:\projects\opendds\ext\opendds\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:376


#include "TestTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "TestTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// e:\projects\opendds\ext\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for Test::TestStructTypeSupport.

Test::TestStructTypeSupport_ptr
TAO::Objref_Traits<Test::TestStructTypeSupport>::duplicate (
    Test::TestStructTypeSupport_ptr p)
{
  return Test::TestStructTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<Test::TestStructTypeSupport>::release (
    Test::TestStructTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

Test::TestStructTypeSupport_ptr
TAO::Objref_Traits<Test::TestStructTypeSupport>::nil (void)
{
  return Test::TestStructTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Test::TestStructTypeSupport>::marshal (
    const Test::TestStructTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Test::TestStructTypeSupport::TestStructTypeSupport (void)
{}

Test::TestStructTypeSupport::~TestStructTypeSupport (void)
{
}

Test::TestStructTypeSupport_ptr
Test::TestStructTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestStructTypeSupport::_duplicate (
      dynamic_cast<TestStructTypeSupport_ptr> (_tao_objref)
    );
}

Test::TestStructTypeSupport_ptr
Test::TestStructTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestStructTypeSupport::_duplicate (
      dynamic_cast<TestStructTypeSupport_ptr> (_tao_objref)
    );
}

Test::TestStructTypeSupport_ptr
Test::TestStructTypeSupport::_nil (void)
{
  return 0;
}

Test::TestStructTypeSupport_ptr
Test::TestStructTypeSupport::_duplicate (TestStructTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Test::TestStructTypeSupport::_tao_release (TestStructTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Test::TestStructTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Test/TestStructTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Test::TestStructTypeSupport::_interface_repository_id (void) const
{
  return "IDL:Test/TestStructTypeSupport:1.0";
}

::CORBA::Boolean
Test::TestStructTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// e:\projects\opendds\ext\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for Test::TestStructDataWriter.

Test::TestStructDataWriter_ptr
TAO::Objref_Traits<Test::TestStructDataWriter>::duplicate (
    Test::TestStructDataWriter_ptr p)
{
  return Test::TestStructDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<Test::TestStructDataWriter>::release (
    Test::TestStructDataWriter_ptr p)
{
  ::CORBA::release (p);
}

Test::TestStructDataWriter_ptr
TAO::Objref_Traits<Test::TestStructDataWriter>::nil (void)
{
  return Test::TestStructDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Test::TestStructDataWriter>::marshal (
    const Test::TestStructDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Test::TestStructDataWriter::TestStructDataWriter (void)
{}

Test::TestStructDataWriter::~TestStructDataWriter (void)
{
}

Test::TestStructDataWriter_ptr
Test::TestStructDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestStructDataWriter::_duplicate (
      dynamic_cast<TestStructDataWriter_ptr> (_tao_objref)
    );
}

Test::TestStructDataWriter_ptr
Test::TestStructDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestStructDataWriter::_duplicate (
      dynamic_cast<TestStructDataWriter_ptr> (_tao_objref)
    );
}

Test::TestStructDataWriter_ptr
Test::TestStructDataWriter::_nil (void)
{
  return 0;
}

Test::TestStructDataWriter_ptr
Test::TestStructDataWriter::_duplicate (TestStructDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Test::TestStructDataWriter::_tao_release (TestStructDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Test::TestStructDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Test/TestStructDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Test::TestStructDataWriter::_interface_repository_id (void) const
{
  return "IDL:Test/TestStructDataWriter:1.0";
}

::CORBA::Boolean
Test::TestStructDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// e:\projects\opendds\ext\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for Test::TestStructDataReader.

Test::TestStructDataReader_ptr
TAO::Objref_Traits<Test::TestStructDataReader>::duplicate (
    Test::TestStructDataReader_ptr p)
{
  return Test::TestStructDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<Test::TestStructDataReader>::release (
    Test::TestStructDataReader_ptr p)
{
  ::CORBA::release (p);
}

Test::TestStructDataReader_ptr
TAO::Objref_Traits<Test::TestStructDataReader>::nil (void)
{
  return Test::TestStructDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Test::TestStructDataReader>::marshal (
    const Test::TestStructDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Test::TestStructDataReader::TestStructDataReader (void)
{}

Test::TestStructDataReader::~TestStructDataReader (void)
{
}

Test::TestStructDataReader_ptr
Test::TestStructDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestStructDataReader::_duplicate (
      dynamic_cast<TestStructDataReader_ptr> (_tao_objref)
    );
}

Test::TestStructDataReader_ptr
Test::TestStructDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TestStructDataReader::_duplicate (
      dynamic_cast<TestStructDataReader_ptr> (_tao_objref)
    );
}

Test::TestStructDataReader_ptr
Test::TestStructDataReader::_nil (void)
{
  return 0;
}

Test::TestStructDataReader_ptr
Test::TestStructDataReader::_duplicate (TestStructDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Test::TestStructDataReader::_tao_release (TestStructDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Test::TestStructDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Test/TestStructDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Test::TestStructDataReader::_interface_repository_id (void) const
{
  return "IDL:Test/TestStructDataReader:1.0";
}

::CORBA::Boolean
Test::TestStructDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

